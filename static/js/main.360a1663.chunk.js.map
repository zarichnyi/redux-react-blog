{"version":3,"sources":["api/apiNews.js","api/apiComments.js","redux/comments.js","components/Comments/Comments.jsx","redux/news.js","components/Article/Article.jsx","components/NewsPage/newsPage.jsx","api/apiUsers.js","redux/users.js","components/Users/Users.jsx","components/AddArticle/AddArticle.jsx","components/PopularNews/PopularNews.jsx","components/LatestNews/LatestNews.jsx","App.js","redux/store.js","index.js"],"names":["NEWS","a","fetch","response","json","result","map","item","views","COMMENTS","initialState","commentsReducer","state","action","type","comments","Comments","dispatch","useDispatch","articleID","useParams","useSelector","filter","postId","useEffect","api","then","commentsFromServer","setCommentsAction","Comment","Group","key","id","Avatar","as","src","Content","Author","email","Text","body","editTitle","title","filterNewsAction","setNewsAction","news","newsReducer","JSON","parse","localStorage","getItem","userId","updateTitle","setItem","stringify","updateBody","deleteArticleItem","addArticleItem","unshift","articleId","setViews","sortNews","sort","b","lastNews","lastNewsToogler","Article","article","find","useState","editingTitle","setEditingTitle","editedTitle","setEditedTitle","editingBody","setEditingBody","editedBody","setEditedBody","handleEdit","event","handleSaveChanges","Card","style","width","Popup","content","trigger","Button","size","icon","onClick","Form","TextArea","defaultValue","onChange","data","value","onKeyDown","onBlur","Header","margin","Segment","description","Description","NewsPage","contextRef","createRef","selectedArticle","setSelectedArticle","ref","Grid","columns","Column","List","link","Item","Link","to","display","justifyContent","color","Statistic","Label","Value","zIndex","Sticky","context","pushing","path","component","USERS","usersReducer","users","Users","text","name","usersFromServer","setUsersAction","Menu","compact","Dropdown","placeholder","selection","options","AddUser","formVisibility","setFormVisibility","newTitle","setNewTitle","newBody","setNewBody","choosenUser","setChoosenUser","marginLeft","Container","position","top","left","height","border","backgroundColor","onSubmit","preventDefault","Date","now","applyData","Input","required","target","PopularNews","LatestNews","setLastNewsToogler","latestNews","App","newsFromServer","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"kRAAMA,EAAO,8C,4CAEN,8BAAAC,EAAA,sEACkBC,MAAMF,GADxB,cACCG,EADD,gBAEgBA,EAASC,OAFzB,cAECC,EAFD,yBAIEA,EAAOC,KAAI,SAAAC,GAEhB,OAAOA,EAAKC,MAAQ,EAAGD,MANpB,4C,6ICFDE,EAAW,iD,4CAEV,8BAAAR,EAAA,sEACkBC,MAAMO,GADxB,cACCN,EADD,gBAEgBA,EAASC,OAFzB,cAECC,EAFD,yBAIEA,GAJF,4C,mCCFDK,EAAe,GAmBNC,EAVS,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACxD,OAAQA,EAAOC,MACb,IATiB,cAUf,OAAO,YAAID,EAAOE,UAEpB,QACE,OAAOH,ICRAI,EAAW,WACtB,IAAMC,EAAWC,cACTC,EAAcC,cAAdD,UACFJ,EAAWM,aAAY,SAAAT,GAAK,OAAKA,EAAMG,SAAUO,QAAO,SAAAf,GAAI,OAAIA,EAAKgB,UAAYJ,QASvF,OAPAK,qBAAU,YFVL,WAAP,gCEWIC,GACGC,MAAK,SAAAC,GAAkB,OACtBV,EDXyB,SAACF,GAAD,MAAe,CAC9CD,KAHmB,cAInBC,YCSea,CAAkBD,SAE9B,CAACV,IAGF,kBAACY,EAAA,EAAQC,MAAT,KACGf,EAAST,KAAI,SAAAS,GAAQ,OACpB,kBAACc,EAAA,EAAD,CAASE,IAAKhB,EAASiB,IACrB,kBAACH,EAAA,EAAQI,OAAT,CAAgBC,GAAG,IAAIC,IAAI,oEAC3B,kBAACN,EAAA,EAAQO,QAAT,KACE,kBAACP,EAAA,EAAQQ,OAAT,CAAgBH,GAAG,KAAKnB,EAASuB,OACjC,kBAACT,EAAA,EAAQU,KAAT,KAAexB,EAASyB,a,SC1B9B9B,EAAe,GAwCR+B,EAAY,SAACT,EAAIU,GAAL,MAAgB,CACvC5B,KArCiB,YAsCjBkB,KACAU,UASWC,EAAmB,SAACX,GAAD,MAAS,CACvClB,KAlDkB,aAmDlBkB,OAGWY,EAAgB,SAACC,GAAD,MAAW,CACtC/B,KAxDe,UAyDf+B,SAmFaC,EA9EK,WAAmC,IAAlClC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAhEa,UAiEX,OAAOD,EAAOgC,KAEhB,IAlEgB,aAmEd,OAAQhC,EAAOmB,IAAMe,KAAKC,MAAMC,aAAaC,QAAQ,SAClD5B,QAAO,SAAAf,GAAI,OAAIA,EAAK4C,SAAWtC,EAAOmB,OACpCe,KAAKC,MAAMC,aAAaC,QAAQ,SAEvC,IAtEe,YAuEb,IAAME,EAAcL,KAAKC,MAAMC,aAAaC,QAAQ,SAAS5C,KAAI,SAACC,GAChE,OAAIA,EAAKyB,KAAOnB,EAAOmB,GACd,eAAKzB,IAGPA,EAAKmC,MAAQ7B,EAAO6B,MAAOnC,MAGpC,OADA0C,aAAaI,QAAQ,OAAQN,KAAKO,UAAUF,IACrCA,EAET,IAhFc,WAiFZ,IAAMG,EAAaR,KAAKC,MAAMC,aAAaC,QAAQ,SAAS5C,KAAI,SAACC,GAC/D,OAAIA,EAAKyB,KAAOnB,EAAOmB,GACd,eAAKzB,IAGPA,EAAKiC,KAAO3B,EAAO2B,KAAMjC,MAGlC,OADA0C,aAAaI,QAAQ,OAAQN,KAAKO,UAAUC,IACrCA,EAET,IA1FmB,gBA2FjB,IAAMC,EAAoBT,KAAKC,MAAMC,aAAaC,QAAQ,SAAS5B,QAAO,SAAAf,GAAI,OAAIA,EAAKyB,KAAOnB,EAAOmB,MAErG,OADAiB,aAAaI,QAAQ,OAAQN,KAAKO,UAAUE,IACrCA,EAET,IA9FgB,aA+Fd,IAAMC,EAAiBV,KAAKC,MAAMC,aAAaC,QAAQ,SAGvD,OAFAO,EAAeC,QAAQ,CAAEP,OAAQtC,EAAOsC,OAAQnB,GAAInB,EAAO8C,UAAWjB,MAAO7B,EAAO6B,MAAOF,KAAM3B,EAAO2B,KAAMhC,MAAO,IACrHyC,aAAaI,QAAQ,OAAQN,KAAKO,UAAUG,IACrCA,EAET,IAnGc,WAoGZ,IAAMG,EAAWb,KAAKC,MAAMC,aAAaC,QAAQ,SAAS5C,KAAI,SAACC,GAC7D,OAAIA,EAAKyB,KAAOnB,EAAO8C,UACd,eAAKpD,IAGPA,EAAKC,MAAQD,EAAKC,MAAQ,EAAGD,MAGtC,OADA0C,aAAaI,QAAQ,OAAQN,KAAKO,UAAUM,IACrCA,EAET,IA7GuB,mBA8GrB,IAAMC,EAAWd,KAAKC,MAAMC,aAAaC,QAAQ,SAASY,MAAK,SAAC7D,EAAG8D,GAAJ,OAC7DA,EAAEvD,MAAQP,EAAEO,SAGd,OADAyC,aAAaI,QAAQ,OAAQN,KAAKO,UAAUO,IACrCA,EAET,IAnHgB,aAoHd,IAAMG,EAAWjB,KAAKC,MAAMC,aAAaC,QAAQ,SAASY,MAAK,SAAC7D,EAAG8D,GACjE,OAAIlD,EAAOoD,gBACFhE,EAAE+B,GAAK+B,EAAE/B,GAET+B,EAAE/B,GAAK/B,EAAE+B,MAIpB,OADAiB,aAAaI,QAAQ,OAAQN,KAAKO,UAAUU,IACrCA,EAGT,QACE,OAAOpD,ICnIAsD,EAAU,WAAO,IACpB/C,EAAcC,cAAdD,UACFF,EAAWC,cACXiD,EAAU9C,aAAY,SAAAT,GAAK,OAAKA,EAAMiC,KAAMuB,MAAK,SAAA7D,GAAI,OAAIA,EAAKyB,MAAQb,QAHjD,EAIakD,oBAAS,GAJtB,mBAIpBC,EAJoB,KAINC,EAJM,OAKWF,mBAAS,IALpB,mBAKpBG,EALoB,KAKPC,EALO,OAQWJ,oBAAS,GARpB,mBAQpBK,EARoB,KAQPC,EARO,OASSN,mBAAS,IATlB,mBASpBO,EAToB,KASRC,EATQ,KAgBrBC,EAAa,SAACC,GACA,UAAdA,EAAMhD,KAAmByC,GAC3BvD,EAASwB,EAAU0B,EAAQnC,GAAIwC,IAC/BvD,EAAS0B,EAAiBI,KAAKC,MAAMC,aAAaC,QAAQ,kBAC1DqB,GAAgB,GAChBE,EAAe,KACQ,UAAdM,EAAMhD,KAAmB6C,IAClC3D,EDgBiC,CACrCH,KA1CgB,WA2ChBkB,GClBsBmC,EAAQnC,GDmB9BQ,KCnBkCoC,IAC9B3D,EAAS0B,EAAiBI,KAAKC,MAAMC,aAAaC,QAAQ,kBAC1DyB,GAAe,GACfE,EAAc,KAGE,WAAdE,EAAMhD,MACR0C,EAAe,IACfF,GAAgB,KAIdS,EAAoB,WACpBR,GACFvD,EAASwB,EAAU0B,EAAQnC,GAAIwC,IAC/BvD,EAAS0B,EAAiBI,KAAKC,MAAMC,aAAaC,QAAQ,kBAC1DqB,GAAgB,GAChBE,EAAe,MAEfF,GAAgB,GAChBE,EAAe,MAInB,OACE,oCACIN,GACA,kBAACc,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SACpB,kBAACF,EAAA,EAAK7C,QAAN,KACE,kBAACgD,EAAA,EAAD,CACEC,QAAQ,aACRC,QACE,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,eACLC,QAAS,kBAAMnB,GAAiBD,QAItC,kBAACc,EAAA,EAAD,CACEC,QAAQ,iBACRC,QACE,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,SACLC,QAzDU,WACxBzE,EDekC,CACpCH,KA7BqB,gBA8BrBkB,GCjByBmC,EAAQnC,KAC/Bf,EAAS0B,EAAiBI,KAAKC,MAAMC,aAAaC,QAAQ,uBA2DhDoB,EAKA,kBAACqB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,aAAc1B,EAAQzB,MACtBoD,SAAU,SAACf,EAAOgB,GAAR,OAAiBtB,EAAesB,EAAKC,QAC/CC,UAAWnB,EACXoB,OAAQlB,KATZ,kBAACmB,EAAA,EAAD,CAAQjE,GAAG,KAAKgD,MAAO,CAAEkB,OAAQ,IAC9BjC,EAAQzB,QAaf,kBAACuC,EAAA,EAAK7C,QAAN,KACE,kBAACgD,EAAA,EAAD,CACEC,QAAQ,YACRC,QACE,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAK,eACLC,QAAS,kBAAMf,GAAgBD,QAInCA,EAKA,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,aAAc1B,EAAQ3B,KACtBsD,SAAU,SAACf,EAAOgB,GAAR,OAAiBlB,EAAckB,EAAKC,QAC9CC,UAAWnB,EACXoB,OAAQlB,KATZ,kBAACqB,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAK7C,QAAN,CAAckE,YAAanC,EAAQ3B,QAYvC,kBAACyC,EAAA,EAAKsB,YAAN,KACE,kBAAC,EAAD,WChHDC,EAAW,WACtB,IAAM3D,EAAOxB,aAAY,SAACT,GAAD,OAAWA,EAAMiC,QACpC4D,EAAaC,sBACbzF,EAAWC,cAHW,EAIkBmD,mBAAS,IAJ3B,mBAIrBsC,EAJqB,KAIJC,EAJI,KAc5B,OACE,yBAAKC,IAAKJ,GACR,kBAACK,EAAA,EAAD,CAAMC,QAAS,GACb,kBAACD,EAAA,EAAKE,OAAN,KACE,kBAACC,EAAA,EAAD,CAAMC,MAAI,GACPrE,EAAKvC,KAAI,SAAA6D,GAAO,OACf,kBAAC8C,EAAA,EAAKE,KAAN,CACEjF,GAAIkF,IACJC,GAAE,gBAAWlD,EAAQnC,IACrBD,IAAKoC,EAAQnC,GACb0D,QAAS,WAlBD,IAACvE,IAmBOgD,EAAQnC,GAlBhC2E,IAAoBxF,IACtBF,EFKkC,CACtCH,KAdgB,WAehB6C,UEPsBxC,IAClBF,EAAS0B,EAAiBI,KAAKC,MAAMC,aAAaC,QAAQ,mBAE5D0D,EAAmB,IAeLA,EAAmBzC,EAAQnC,MAG7B,kBAACqE,EAAA,EAAD,KACE,kBAACS,EAAA,EAAD,CAAMC,QAAQ,SACZ,kBAACD,EAAA,EAAKE,OAAN,CAAa9B,MAAO,CAAEoC,QAAS,OAAQC,eAAgB,kBACrD,8BACGpD,EAAQzB,OAEX,0BAAMwC,MAAO,CAAEsC,MAAO,SACpB,kBAACC,EAAA,EAAD,CAAWjC,KAAK,QACd,kBAACiC,EAAA,EAAUC,MAAX,cACA,kBAACD,EAAA,EAAUE,MAAX,KAAkBxD,EAAQ3D,kBAU5C,kBAACsG,EAAA,EAAKE,OAAN,CAAa9B,MAAO,CAAE0C,OAAQ,IAC5B,kBAACC,EAAA,EAAD,CAAQC,QAASrB,EAAYsB,SAAO,GAClC,kBAAC,IAAD,CAAOC,KAAK,mBAAmBC,UAAW/D,S,kBC1DhDgE,EAAQ,8C,4CAEP,8BAAAjI,EAAA,sEACkBC,MAAMgI,GADxB,cACC/H,EADD,gBAEgBA,EAASC,OAFzB,cAECC,EAFD,yBAIEA,GAJF,4C,sBCFP,IAAMK,EAAe,GAmBNyH,EAVM,WAAmC,IAAlCvH,EAAiC,uDAAzBF,EAAcG,EAAW,uCACrD,OAAQA,EAAOC,MACb,IATc,WAUZ,OAAO,YAAID,EAAOuH,OAEpB,QACE,OAAOxH,ICPAyH,EAAQ,WACnB,IAAMpH,EAAWC,cACXkH,EAAQ/G,aAAY,SAAAT,GAAK,OAAKA,EAAMwH,MAAO9H,KAAI,SAAAC,GAAI,MAAK,CAC5DwB,IAAKxB,EAAKyB,GACVsG,KAAM/H,EAAKgI,KACXvC,MAAOzF,EAAKyB,UAWd,OATAoG,EAAM1E,QAAQ,CAAE3B,IAAK,EAAGuG,KAAM,MAAOtC,MAAO,IAE5CxE,qBAAU,YFfL,WAAP,gCEgBIC,GACGC,MAAK,SAAA8G,GAAe,OACnBvH,EDhBsB,SAACmH,GAAD,MAAY,CACxCtH,KAHgB,WAIhBsH,SCceK,CAAeD,SAE3B,CAACvH,IAGF,kBAACyH,EAAA,EAAD,CAAMC,SAAO,GACX,kBAACC,EAAA,EAAD,CACEC,YAAY,MACZC,WAAS,EAACC,QAASX,EACnBvC,aAAe9C,KAAKC,MAAMC,aAAaC,QAAQ,gBAC/C4C,SAAU,SAACf,EAAOgB,GAChB9E,EAAS0B,EAAiBoD,EAAKC,QAC/B/C,aAAaI,QAAQ,cAAeN,KAAKO,UAAUyC,EAAKC,a,SC1BrDgD,EAAU,WACrB,IAAMZ,EAAQ/G,aAAY,SAAAT,GAAK,OAAKA,EAAMwH,MAAO9H,KAAI,SAAAC,GAAI,MAAK,CAC5DwB,IAAKxB,EAAKyB,GACVsG,KAAM/H,EAAKgI,KACXvC,MAAOzF,EAAKyB,UAJa,EAMiBqC,oBAAS,GAN1B,mBAMpB4E,EANoB,KAMJC,EANI,OAOK7E,mBAAS,IAPd,mBAOpB8E,EAPoB,KAOVC,EAPU,OAQG/E,mBAAS,IARZ,mBAQpBgF,EARoB,KAQXC,EARW,OASWjF,mBAAS,GATpB,mBASpBkF,EAToB,KASPC,EATO,KAUrBvI,EAAWC,cAUjB,OACE,oCACE,kBAACqE,EAAA,EAAD,CACEL,MAAO,CAAEuE,WAAY,IACrB/D,QAAS,kBAAMwD,GAAmBD,KAFpC,eAMEA,GACA,kBAACS,EAAA,EAAD,CAAWxE,MAAO,CAAE0C,OAAQ,EAAG+B,SAAU,WAAYC,IAAK,OAAQC,KAAM,OAAQC,OAAQ,QAAS3E,MAAO,QAAS4E,OAAQ,kBAAmBC,gBAAiB,SAC3J,kBAAC3D,EAAA,EAAD,CAASnB,MAAO,CAAE8E,gBAAiB,SACjC,kBAACrE,EAAA,EAAD,CACEsE,SAAW,SAAAlF,GACTA,EAAMmF,iBArBF,WNQM,IAACxH,EAAOF,EAAMW,EAAQQ,EMP5C1C,GNOuByB,EMPHyG,ENOU3G,EMPA6G,ENOMlG,EMPGoG,ENOK5F,GMPSwG,KAAKC,MNOC,CAC7DtJ,KApBkB,aAqBlB4B,QACAF,OACAW,SACAQ,eMXEuF,GAAmBD,GACnBG,EAAY,IACZE,EAAW,IACXE,EAAe,GAiBHa,GACApJ,EAAS0B,EAAiBI,KAAKC,MAAMC,aAAaC,QAAQ,oBAG5D,kBAACoH,EAAA,EAAD,CACEzB,YAAY,QACZ0B,UAAQ,EACRrF,MAAO,CAAEkB,OAAQ,SAAUjB,MAAO,QAClCa,MAAOmD,EACPrD,SAAU,SAACf,GAAD,OAAWqE,EAAYrE,EAAMyF,OAAOxE,UAEhD,kBAACJ,EAAA,EAAD,CACEiD,YAAY,OACZ0B,UAAQ,EACRvE,MAAOqD,EACPvD,SAAU,SAACf,GAAD,OAAWuE,EAAWvE,EAAMyF,OAAOxE,UAE/C,kBAAC4C,EAAA,EAAD,CACEL,KAAK,QACLO,WAAS,EAACC,QAASX,EACnBvC,aAAc,EACdC,SAAU,SAACf,EAAOgB,GAAR,OAAiByD,EAAezD,EAAKC,QAC/Cd,MAAO,CAAEkB,OAAQ,YAEnB,kBAACb,EAAA,EAAD,CAAQzE,KAAK,SAASoE,MAAO,CAAEkB,OAAQ,WAAvC,UACA,kBAACb,EAAA,EAAD,CAAQG,QAAS,WACfwD,GAAmBD,GACnBG,EAAY,IACZE,EAAW,IACXE,EAAe,IAEjBtE,MAAO,CAAEkB,OAAQ,WANjB,eC5DDqE,EAAc,WACzB,IAAMxJ,EAAWC,cAEjB,OACE,oCACE,kBAACqE,EAAA,EAAD,CACEL,MAAO,CAAEuE,WAAY,IACrB/D,QAAS,WACPzE,EPI6B,CACrCH,KATyB,qBOKjBG,EAAS0B,EAAiBI,KAAKC,MAAMC,aAAaC,QAAQ,oBAJ9D,kBCJOwH,EAAa,WACxB,IAAMzJ,EAAWC,cADa,EAEgBmD,oBAAS,GAFzB,mBAEvBJ,EAFuB,KAEN0G,EAFM,KAI9B,OACE,oCACE,kBAACpF,EAAA,EAAD,CACEL,MAAO,CAAEuE,WAAY,IACrB/D,QAAS,WACPzE,ERHgB,SAACgD,GAAD,MAAsB,CAC9CnD,KAHkB,aAIlBmD,mBQCiB2G,CAAW3G,IACpB0G,GAAoB1G,GACpBhD,EAAS0B,EAAiBI,KAAKC,MAAMC,aAAaC,QAAQ,oBAG1De,EAAe,6BC0BV4G,OAnCf,WACE,IAAM5J,EAAWC,cAmBjB,OAjBAM,qBAAU,YbZL,WAAP,gCaaIC,GACGC,MAAK,SAAAoJ,GACA/H,KAAKC,MAAMC,aAAaC,QAAQ,SAClCjC,EAAS2B,EAAcG,KAAKC,MAAMC,aAAaC,QAAQ,YAEvDjC,EAAS2B,EAAckI,IACvB7H,aAAaI,QAAQ,OAAQN,KAAKO,UAAUwH,KAG1C/H,KAAKC,MAAMC,aAAaC,QAAQ,iBAClCjC,EAAS0B,EAAiBI,KAAKC,MAAMC,aAAaC,QAAQ,uBAG/D,CAACjC,IAIF,kBAACyI,EAAA,EAAD,KACE,kBAACrD,EAAA,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAACA,EAAA,EAAD,KACE,kBAAC,EAAD,S,SCnCF0E,GAAUC,aAAgB,CAC9BnI,KAAMC,EACN/B,SAAUJ,EACVyH,MAAOD,IAKM8C,GAFDC,aAAYH,ICF1BI,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUH,MAAOA,IACf,kBAAC,GAAD,QAGJI,SAASC,eAAe,W","file":"static/js/main.360a1663.chunk.js","sourcesContent":["const NEWS = 'https://jsonplaceholder.typicode.com/posts/';\n\nexport async function getNews() {\n  const response = await fetch(NEWS);\n  const result = await response.json();\n\n  return result.map(item => {\n    // eslint-disable-next-line no-sequences\n    return item.views = 0, item;\n  });\n}\n","const COMMENTS = 'https://jsonplaceholder.typicode.com/comments/';\n\nexport async function comments() {\n  const response = await fetch(COMMENTS);\n  const result = await response.json();\n\n  return result;\n}","const initialState = [];\n\nconst SET_COMMENTS = 'setComments';\n\nexport const setCommentsAction = (comments) => ({\n  type: SET_COMMENTS,\n  comments,\n})\n\nconst commentsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_COMMENTS:\n      return [...action.comments];\n\n    default:\n      return state;\n  }\n}\n\nexport default commentsReducer;","import { Comment } from 'semantic-ui-react';\nimport React, { useEffect } from 'react';\nimport * as api from '../../api/apiComments';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCommentsAction } from '../../redux/comments';\n\nexport const Comments = () => {\n  const dispatch = useDispatch();\n  const { articleID } = useParams();\n  const comments = useSelector(state => (state.comments).filter(item => item.postId === +articleID));\n\n  useEffect(() => {\n    api.comments()\n      .then(commentsFromServer => (\n        dispatch(setCommentsAction(commentsFromServer))\n      ))\n  }, [dispatch]);\n\n  return (\n    <Comment.Group>\n      {comments.map(comments => (\n        <Comment key={comments.id}>\n          <Comment.Avatar as='a' src='https://react.semantic-ui.com/images/avatar/small/christian.jpg' />\n          <Comment.Content>\n            <Comment.Author as='a'>{comments.email}</Comment.Author>\n            <Comment.Text>{comments.body}</Comment.Text>\n          </Comment.Content>\n        </Comment>\n      ))}\n    </Comment.Group>\n  )\n}","const initialState = []\n\nconst SET_NEWS = 'setNews';\nconst FILTER_NEWS = 'filterNews';\nconst EDIT_TITLE = 'editTitle';\nconst EDIT_BODY = 'editBody';\nconst DELETE_ARTICLE = 'deleteArticle';\nconst ADD_ARTICLE = 'addArticle';\nconst SET_VIEWS = 'setViews';\nconst SORT_BY_POPULARITY = 'sortByPopularity';\nconst LATEST_NEWS = 'latestNews';\n\nexport const latestNews = (lastNewsToogler) => ({\n  type: LATEST_NEWS,\n  lastNewsToogler,\n})\n\nexport const sortByPopularity = () => ({\n  type: SORT_BY_POPULARITY,\n})\n\nexport const setViews = (articleId) => ({\n  type: SET_VIEWS,\n  articleId,\n})\n\nexport const AddArticle = (title, body, userId, articleId) => ({\n  type: ADD_ARTICLE,\n  title,\n  body,\n  userId,\n  articleId,\n})\n\nexport const deleteArticle = (id) => ({\n  type: DELETE_ARTICLE,\n  id,\n})\n\n\nexport const editTitle = (id, title) => ({\n  type: EDIT_TITLE,\n  id,\n  title,\n})\n\nexport const editBody = (id, body) => ({\n  type: EDIT_BODY,\n  id,\n  body,\n})\n\nexport const filterNewsAction = (id) => ({\n  type: FILTER_NEWS,\n  id,\n})\n\nexport const setNewsAction = (news) => ({\n  type: SET_NEWS,\n  news,\n})\n\n\n\nconst newsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NEWS:\n      return action.news;\n\n    case FILTER_NEWS:\n      return (action.id && JSON.parse(localStorage.getItem('news'))\n        .filter(item => item.userId === action.id))\n        || JSON.parse(localStorage.getItem('news'))\n\n    case EDIT_TITLE:\n      const updateTitle = JSON.parse(localStorage.getItem('news')).map((item) => {\n        if (item.id !== action.id) {\n          return { ...item };\n        }\n        // eslint-disable-next-line no-sequences\n        return item.title = action.title, item\n      })\n      localStorage.setItem('news', JSON.stringify(updateTitle));\n      return updateTitle;\n\n    case EDIT_BODY:\n      const updateBody = JSON.parse(localStorage.getItem('news')).map((item) => {\n        if (item.id !== action.id) {\n          return { ...item };\n        }\n        // eslint-disable-next-line no-sequences\n        return item.body = action.body, item;\n      })\n      localStorage.setItem('news', JSON.stringify(updateBody));\n      return updateBody;\n\n    case DELETE_ARTICLE:\n      const deleteArticleItem = JSON.parse(localStorage.getItem('news')).filter(item => item.id !== action.id);\n      localStorage.setItem('news', JSON.stringify(deleteArticleItem));\n      return deleteArticleItem;\n\n    case ADD_ARTICLE:\n      const addArticleItem = JSON.parse(localStorage.getItem('news'))\n      addArticleItem.unshift({ userId: action.userId, id: action.articleId, title: action.title, body: action.body, views: 0 })\n      localStorage.setItem('news', JSON.stringify(addArticleItem));\n      return addArticleItem;\n\n    case SET_VIEWS:\n      const setViews = JSON.parse(localStorage.getItem('news')).map((item) => {\n        if (item.id !== action.articleId) {\n          return { ...item };\n        }\n        // eslint-disable-next-line no-sequences\n        return item.views = item.views + 1, item;\n      })\n      localStorage.setItem('news', JSON.stringify(setViews));\n      return setViews;\n\n    case SORT_BY_POPULARITY:\n      const sortNews = JSON.parse(localStorage.getItem('news')).sort((a, b) => (\n        b.views - a.views\n      ))\n      localStorage.setItem('news', JSON.stringify(sortNews))\n      return sortNews;\n\n    case LATEST_NEWS:\n      const lastNews = JSON.parse(localStorage.getItem('news')).sort((a, b) => {\n        if (action.lastNewsToogler) {\n          return a.id - b.id\n        } else {\n          return b.id - a.id\n        }\n      })\n      localStorage.setItem('news', JSON.stringify(lastNews))\n      return lastNews;\n\n\n    default:\n      return state;\n  }\n}\n\nexport default newsReducer;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Card, Button, Popup, Header, Form, TextArea, Segment } from 'semantic-ui-react';\nimport { Comments } from '../Comments/Comments';\nimport { editTitle, editBody, deleteArticle, filterNewsAction } from '../../redux/news';\n\nexport const Article = () => {\n  const { articleID } = useParams();\n  const dispatch = useDispatch();\n  const article = useSelector(state => (state.news).find(item => item.id === +articleID));\n  const [editingTitle, setEditingTitle] = useState(false);\n  const [editedTitle, setEditedTitle] = useState('');\n\n\n  const [editingBody, setEditingBody] = useState(false);\n  const [editedBody, setEditedBody] = useState('');\n\n  const deleteArticleItem = () => {\n    dispatch(deleteArticle(article.id));\n    dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n  }\n\n  const handleEdit = (event) => {\n    if (event.key === 'Enter' && editedTitle) {\n      dispatch(editTitle(article.id, editedTitle));\n      dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n      setEditingTitle(false);\n      setEditedTitle('');\n    } else if (event.key === 'Enter' && editedBody) {\n      dispatch(editBody(article.id, editedBody));\n      dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n      setEditingBody(false);\n      setEditedBody('');\n    }\n\n    if (event.key === 'Escape') {\n      setEditedTitle('');\n      setEditingTitle(false);\n    }\n  };\n\n  const handleSaveChanges = () => {\n    if (editedTitle) {\n      dispatch(editTitle(article.id, editedTitle));\n      dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n      setEditingTitle(false);\n      setEditedTitle('');\n    } else {\n      setEditingTitle(false);\n      setEditedTitle('');\n    }\n  };\n\n  return (\n    <>\n      { article &&\n        <Card style={{ width: '100%'}}>\n          <Card.Content>\n            <Popup\n              content='Edit title'\n              trigger={\n                <Button\n                  size='mini'\n                  icon=\"edit outline\"\n                  onClick={() => setEditingTitle(!editingTitle)}\n                />\n              }\n            />\n            <Popup\n              content='Delete article'\n              trigger={\n                <Button\n                  size='mini'\n                  icon=\"delete\"\n                  onClick={deleteArticleItem}\n                />\n              }\n            />\n            {!editingTitle ?\n              <Header as=\"h2\" style={{ margin: 0 }} >\n                {article.title}\n              </Header>\n              :\n              <Form>\n                <TextArea\n                  defaultValue={article.title}\n                  onChange={(event, data) => setEditedTitle(data.value)}\n                  onKeyDown={handleEdit}\n                  onBlur={handleSaveChanges}\n                />\n              </Form>\n            }\n          </Card.Content>\n          <Card.Content>\n            <Popup\n              content='Edit body'\n              trigger={\n                <Button\n                  size='mini'\n                  icon=\"edit outline\"\n                  onClick={() => setEditingBody(!editingBody)}\n                />\n              }\n            />\n            {!editingBody ?\n              <Segment>\n                <Card.Content description={article.body} />\n              </Segment>\n              :\n              <Form>\n                <TextArea\n                  defaultValue={article.body}\n                  onChange={(event, data) => setEditedBody(data.value)}\n                  onKeyDown={handleEdit}\n                  onBlur={handleSaveChanges}\n                />\n              </Form>\n            }\n            <Card.Description>\n              <Comments />\n            </Card.Description>\n          </Card.Content>\n        </Card>}\n    </>\n  )\n}\n","import React, { createRef } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { List, Segment, Grid, Sticky, Statistic } from 'semantic-ui-react';\nimport { Article } from '../Article/Article';\nimport { setViews, filterNewsAction } from '../../redux/news';\nimport { useState } from 'react';\n\nexport const NewsPage = () => {\n  const news = useSelector((state) => state.news);\n  const contextRef = createRef();\n  const dispatch = useDispatch();\n  const [selectedArticle, setSelectedArticle] = useState('');\n\n  const checkIfViewed = (articleID) => {\n    if (selectedArticle !== articleID) {\n      dispatch(setViews(articleID))\n      dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n    }\n    setSelectedArticle('')\n  }\n\n  return (\n    <div ref={contextRef}>\n      <Grid columns={2}>\n        <Grid.Column >\n          <List link>\n            {news.map(article => (\n              <List.Item\n                as={Link}\n                to={`/news/${article.id}`}\n                key={article.id}\n                onClick={() => {\n                  checkIfViewed(article.id);\n                  setSelectedArticle(article.id)\n                }}\n              >\n                <Segment>\n                  <Grid columns='equal'>\n                    <Grid.Column style={{ display: 'flex', justifyContent: 'space-between' }}>\n                      <span>\n                        {article.title}\n                      </span>\n                      <span style={{ color: 'blue' }}>\n                        <Statistic size='mini'>\n                          <Statistic.Label>Views</Statistic.Label>\n                          <Statistic.Value>{article.views}</Statistic.Value>\n                        </Statistic>\n                      </span>\n                    </Grid.Column>\n                  </Grid>\n                </Segment>\n              </List.Item>\n            ))}\n          </List>\n        </Grid.Column>\n        <Grid.Column style={{ zIndex: 0 }}>\n          <Sticky context={contextRef} pushing>\n            <Route path=\"/news/:articleID\" component={Article} />\n          </Sticky>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n};","const USERS = 'https://jsonplaceholder.typicode.com/users/';\n\nexport async function getUsers() {\n  const response = await fetch(USERS);\n  const result = await response.json();\n\n  return result;\n}","const initialState = []\n\nconst SET_USERS = 'setUsers';\n\nexport const setUsersAction = (users) => ({\n  type: SET_USERS,\n  users,\n})\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      return [...action.users];\n\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Menu, Dropdown } from 'semantic-ui-react';\nimport * as api from '../../api/apiUsers'\nimport { setUsersAction } from '../../redux/users';\nimport { filterNewsAction } from '../../redux/news';\n\n\nexport const Users = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(state => (state.users).map(item => ({\n    key: item.id,\n    text: item.name,\n    value: item.id,\n  })));\n  users.unshift({ key: 0, text: 'All', value: 0 });\n\n  useEffect(() => {\n    api.getUsers()\n      .then(usersFromServer => (\n        dispatch(setUsersAction(usersFromServer))\n      ))\n  }, [dispatch])\n\n  return (\n    <Menu compact>\n      <Dropdown\n        placeholder=\"All\"\n        selection options={users}\n        defaultValue={(JSON.parse(localStorage.getItem('choosenUser')))}\n        onChange={(event, data) => {\n          dispatch(filterNewsAction(data.value));\n          localStorage.setItem('choosenUser', JSON.stringify(data.value));\n        }}\n      />\n    </Menu>\n  )\n}\n","import React from 'react';\nimport { Button, Container, Form, Input, TextArea, Segment, Dropdown } from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { AddArticle, filterNewsAction } from '../../redux/news';\n\nexport const AddUser = () => {\n  const users = useSelector(state => (state.users).map(item => ({\n    key: item.id,\n    text: item.name,\n    value: item.id,\n  })));\n  const [formVisibility, setFormVisibility] = useState(false)\n  const [newTitle, setNewTitle] = useState('');\n  const [newBody, setNewBody] = useState('');\n  const [choosenUser, setChoosenUser] = useState(1);\n  const dispatch = useDispatch();\n\n  const applyData = () => {\n    dispatch(AddArticle(newTitle, newBody, choosenUser, +Date.now()))\n    setFormVisibility(!formVisibility)\n    setNewTitle('')\n    setNewBody('')\n    setChoosenUser(1)\n  }\n\n  return (\n    <>\n      <Button\n        style={{ marginLeft: 40 }}\n        onClick={() => setFormVisibility(!formVisibility)}\n      >\n        Add article\n      </Button>\n      { formVisibility &&\n        <Container style={{ zIndex: 1, position: 'absolute', top: '20vh', left: '10vw', height: '500px', width: '800px', border: '1px solid black', backgroundColor: 'grey' }}>\n          <Segment style={{ backgroundColor: \"grey\" }}>\n            <Form\n              onSubmit={(event => {\n                event.preventDefault();\n                applyData();\n                dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n              })}\n            >\n              <Input\n                placeholder=\"Title\"\n                required\n                style={{ margin: '20px 0', width: '100%' }}\n                value={newTitle}\n                onChange={(event) => setNewTitle(event.target.value)}\n              />\n              <TextArea\n                placeholder=\"Body\"\n                required\n                value={newBody}\n                onChange={(event) => setNewBody(event.target.value)}\n              />\n              <Dropdown\n                name=\"users\"\n                selection options={users}\n                defaultValue={1}\n                onChange={(event, data) => setChoosenUser(data.value)}\n                style={{ margin: '0 10px' }}\n              />\n              <Button type='submit' style={{ margin: '20px 0' }}>Submit</Button>\n              <Button onClick={() => {\n                setFormVisibility(!formVisibility)\n                setNewTitle('')\n                setNewBody('')\n                setChoosenUser(1)\n              }}\n              style={{ margin: '0 10px' }}\n              >\n                Cancel\n              </Button>\n            </Form>\n          </Segment>\n        </Container>\n      }\n    </>\n  )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { sortByPopularity, filterNewsAction } from '../../redux/news';\n\nexport const PopularNews = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Button\n        style={{ marginLeft: 40 }}\n        onClick={() => {\n          dispatch(sortByPopularity())\n          dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n        }}\n      >\n        Popular News\n      </Button>\n    </>\n  )\n}","import React from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport { latestNews, filterNewsAction } from '../../redux/news';\n\nexport const LatestNews = () => {\n  const dispatch = useDispatch();\n  const [lastNewsToogler, setLastNewsToogler] = useState(false);\n\n  return (\n    <>\n      <Button\n        style={{ marginLeft: 40 }}\n        onClick={() => {\n          dispatch(latestNews(lastNewsToogler));\n          setLastNewsToogler(!lastNewsToogler);\n          dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n        }}\n      >\n        { lastNewsToogler ? `Oldest News` : `Last News`}\n    </Button>\n    </>\n  )\n}","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container, Segment } from 'semantic-ui-react';\nimport * as api from './api/apiNews';\nimport { NewsPage } from './components/NewsPage/newsPage';\nimport { setNewsAction, filterNewsAction } from './redux/news';\nimport { Users } from './components/Users/Users';\nimport { AddUser } from './components/AddArticle/AddArticle';\nimport { PopularNews } from './components/PopularNews/PopularNews';\nimport { LatestNews } from './components/LatestNews/LatestNews';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    api.getNews()\n      .then(newsFromServer => {\n        if (JSON.parse(localStorage.getItem('news'))) {\n          dispatch(setNewsAction(JSON.parse(localStorage.getItem('news'))));\n        } else {\n          dispatch(setNewsAction(newsFromServer));\n          localStorage.setItem('news', JSON.stringify(newsFromServer));\n        }\n\n        if (JSON.parse(localStorage.getItem('choosenUser'))) {\n          dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))))\n        }\n      })\n  }, [dispatch])\n\n\n  return (\n    <Container>\n      <Segment>\n        <Users />\n        <AddUser />\n        <PopularNews />\n        <LatestNews />\n      </Segment>\n      <Segment>\n        <NewsPage />\n      </Segment>\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport commentsReducer from './comments';\nimport newsReducer from './news';\nimport usersReducer from './users';\n\nconst reducer = combineReducers({\n  news: newsReducer,\n  comments: commentsReducer,\n  users: usersReducer,\n})\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter> ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}