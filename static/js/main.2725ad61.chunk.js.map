{"version":3,"sources":["api/apiNews.js","api/apiComments.js","redux/comments.js","components/Comments/Comments.jsx","redux/news.js","components/Article/Article.jsx","components/NewsPage/newsPage.jsx","api/apiUsers.js","redux/users.js","components/Users/Users.jsx","components/Users/AddUser.jsx","App.js","redux/store.js","index.js"],"names":["NEWS","a","fetch","response","json","result","COMMENTS","initialState","commentsReducer","state","action","type","comments","Comments","dispatch","useDispatch","articleID","useParams","useSelector","filter","item","postId","useEffect","api","then","commentsFromServer","setCommentsAction","Comment","Group","map","key","id","Content","Author","as","email","Text","body","editTitle","title","filterNewsAction","setNewsAction","news","newsReducer","JSON","parse","localStorage","getItem","userId","updateTitle","setItem","stringify","updateBody","deleteArticleItem","addArticleItem","push","articleId","Article","article","find","useState","editingTitle","setEditingTitle","editedTitle","setEditedTitle","editingBody","setEditingBody","editedBody","setEditedBody","handleEdit","event","handleSaveChanges","Card","Popup","content","trigger","Button","size","icon","onClick","Form","TextArea","defaultValue","onChange","data","value","onKeyDown","onBlur","Header","style","margin","description","Description","NewsPage","contextRef","createRef","ref","Grid","columns","Column","List","link","Item","Link","to","Segment","zIndex","Sticky","context","pushing","path","component","USERS","usersReducer","users","Users","text","name","unshift","usersFromServer","setUsersAction","Menu","compact","Dropdown","placeholder","selection","options","AddUser","formVisibility","setFormVisibility","newTitle","setNewTitle","newBody","setNewBody","choosenUser","setChoosenUser","marginLeft","Container","position","top","left","height","width","border","backgroundColor","onSubmit","preventDefault","Date","now","applyData","Input","required","target","App","newsFromServer","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2725ad61.chunk.js","sourcesContent":["const NEWS = 'https://jsonplaceholder.typicode.com/posts/';\n\nexport async function getNews() {\n  const response = await fetch(NEWS);\n  const result = await response.json();\n\n  return result;\n}\n","const COMMENTS = 'https://jsonplaceholder.typicode.com/comments/';\n\nexport async function comments() {\n  const response = await fetch(COMMENTS);\n  const result = await response.json();\n\n  return result;\n}","const initialState = [];\n\nconst SET_COMMENTS = 'setComments';\n\nexport const setCommentsAction = (comments) => ({\n  type: SET_COMMENTS,\n  comments,\n})\n\nconst commentsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_COMMENTS:\n      return [...action.comments];\n\n    default:\n      return state;\n  }\n}\n\nexport default commentsReducer;","import { Comment } from 'semantic-ui-react';\nimport React, { useEffect } from 'react';\nimport * as api from '../../api/apiComments';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCommentsAction } from '../../redux/comments';\n\nexport const Comments = () => {\n  const dispatch = useDispatch();\n  const { articleID } = useParams();\n  const comments = useSelector(state => (state.comments).filter(item => item.postId === +articleID));\n\n  useEffect(() => {\n    api.comments()\n      .then(commentsFromServer => (\n        dispatch(setCommentsAction(commentsFromServer))\n      ))\n  }, [dispatch]);\n\n  return (\n    <Comment.Group>\n      {comments.map(comments => (\n        <Comment key={comments.id}>\n          <Comment.Content>\n            <Comment.Author as='a'>{comments.email}</Comment.Author>\n            <Comment.Text>{comments.body}</Comment.Text>\n          </Comment.Content>\n        </Comment>\n      ))}\n    </Comment.Group>\n  )\n}","const initialState = []\n\nconst SET_NEWS = 'setNews';\nconst FILTER_NEWS = 'filterNews';\nconst EDIT_TITLE = 'editTitle';\nconst EDIT_BODY = 'editBody';\nconst DELETE_ARTICLE = 'deleteArticle';\nconst ADD_ARTICLE = 'addArticle';\n\n\n\nexport const AddArticle = (title, body, userId, articleId) => ({\n  type: ADD_ARTICLE,\n  title,\n  body,\n  userId,\n  articleId,\n})\n\nexport const deleteArticle = (id) => ({\n  type: DELETE_ARTICLE,\n  id,\n})\n\n\nexport const editTitle = (id, title) => ({\n  type: EDIT_TITLE,\n  id,\n  title,\n})\n\nexport const editBody = (id, body) => ({\n  type: EDIT_BODY,\n  id,\n  body,\n})\n\nexport const filterNewsAction = (id) => ({\n  type: FILTER_NEWS,\n  id,\n})\n\nexport const setNewsAction = (news) => ({\n  type: SET_NEWS,\n  news,\n})\n\nconst newsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_NEWS:\n      return [...action.news];\n\n    case FILTER_NEWS:\n      return (action.id && JSON.parse(localStorage.getItem('news'))\n        .filter(item => item.userId === action.id))\n        || JSON.parse(localStorage.getItem('news'))\n\n    case EDIT_TITLE:\n      const updateTitle = JSON.parse(localStorage.getItem('news')).map((item) => {\n        if (item.id !== action.id) {\n          return { ...item };\n        }\n        // eslint-disable-next-line no-sequences\n        return item.title = action.title, item\n      })\n      localStorage.setItem('news', JSON.stringify(updateTitle));\n      return updateTitle;\n\n    case EDIT_BODY:\n      const updateBody = JSON.parse(localStorage.getItem('news')).map((item) => {\n        if (item.id !== action.id) {\n          return { ...item };\n        }\n        // eslint-disable-next-line no-sequences\n        return item.body = action.body, item\n      })\n      localStorage.setItem('news', JSON.stringify(updateBody));\n      return updateBody;\n\n    case DELETE_ARTICLE:\n      const deleteArticleItem = JSON.parse(localStorage.getItem('news')).filter(item => item.id !== action.id);\n      localStorage.setItem('news', JSON.stringify(deleteArticleItem));\n      return deleteArticleItem;\n\n    case ADD_ARTICLE:\n      const addArticleItem = JSON.parse(localStorage.getItem('news'))\n      addArticleItem.push({ userId: action.userId, id: action.articleId, title: action.title, body: action.body })\n      localStorage.setItem('news', JSON.stringify(addArticleItem));\n      return addArticleItem;\n\n\n    default:\n      return state;\n  }\n}\n\nexport default newsReducer;","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { Card, Button, Popup, Header, Form, TextArea } from 'semantic-ui-react';\nimport { Comments } from '../Comments/Comments';\nimport { editTitle, editBody, deleteArticle, filterNewsAction } from '../../redux/news';\n\nexport const Article = () => {\n  const { articleID } = useParams();\n  const dispatch = useDispatch();\n  const article = useSelector(state => (state.news).find(item => item.id === +articleID));\n  const [editingTitle, setEditingTitle] = useState(false);\n  const [editedTitle, setEditedTitle] = useState('');\n\n  const [editingBody, setEditingBody] = useState(false);\n  const [editedBody, setEditedBody] = useState('');\n\n  const deleteArticleItem = () => {\n    dispatch(deleteArticle(article.id));\n    dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n  }\n\n  const handleEdit = (event) => {\n    if (event.key === 'Enter' && editedTitle) {\n      dispatch(editTitle(article.id, editedTitle));\n      dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n      setEditingTitle(false);\n      setEditedTitle('');\n    } else if (event.key === 'Enter' && editedBody) {\n      dispatch(editBody(article.id, editedBody));\n      dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n      setEditingBody(false);\n      setEditedBody('');\n    }\n\n    if (event.key === 'Escape') {\n      setEditedTitle('');\n      setEditingTitle(false);\n    }\n  };\n\n  const handleSaveChanges = () => {\n    if (editedTitle) {\n      dispatch(editTitle(article.id, editedTitle));\n      dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))));\n      setEditingTitle(false);\n      setEditedTitle('');\n    } else {\n      setEditingTitle(false);\n      setEditedTitle('');\n    }\n  };\n\n  return (\n    <>\n      { article &&\n        <Card>\n          <Card.Content>\n            <Popup\n              content='Edit title'\n              trigger={\n                <Button\n                  size='mini'\n                  icon=\"edit outline\"\n                  onClick={() => setEditingTitle(!editingTitle)}\n                />\n              }\n            />\n            <Popup\n              content='Delete article'\n              trigger={\n                <Button\n                  size='mini'\n                  icon=\"delete\"\n                  onClick={deleteArticleItem}\n                />\n              }\n            />\n            {!editingTitle ?\n              <Header as=\"h2\" style={{ margin: 0 }} >\n                {article.title}\n              </Header>\n              :\n              <Form>\n                <TextArea\n                  defaultValue={article.title}\n                  onChange={(event, data) => setEditedTitle(data.value)}\n                  onKeyDown={handleEdit}\n                  onBlur={handleSaveChanges}\n                />\n              </Form>\n            }\n          </Card.Content>\n          <Card.Content>\n            <Popup\n              content='Edit body'\n              trigger={\n                <Button\n                  size='mini'\n                  icon=\"edit outline\"\n                  onClick={() => setEditingBody(!editingBody)}\n                />\n              }\n            />\n            {!editingBody ?\n              <Card.Content description={article.body} />\n              :\n              <Form>\n                <TextArea\n                  defaultValue={article.body}\n                  onChange={(event, data) => setEditedBody(data.value)}\n                  onKeyDown={handleEdit}\n                  onBlur={handleSaveChanges}\n                />\n              </Form>\n            }\n            <Card.Description>\n              <Comments />\n            </Card.Description>\n          </Card.Content>\n        </Card>}\n    </>\n  )\n}\n","import React, { createRef } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { List, Segment, Grid, Sticky } from 'semantic-ui-react';\nimport { Article } from '../Article/Article';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport const NewsPage = () => {\n  const [countViews, setCountViews] = useState('');\n  const news = useSelector((state) => state.news);\n  const contextRef = createRef();\n\n  // useEffect(() => {\n  //   const addCount = (articleId) => {\n  //     if (Object.keys(countViews).includes(articleId)) {\n  //       setCountViews(articleId = countViews[articleId] + 1)\n  //     } else {\n  //       setCountViews({ articleId: 1 })\n  //     }\n  //   }\n  // }, [countViews])\n\n  return (\n    <div ref={contextRef}>\n      <Grid columns={2}>\n        <Grid.Column >\n          <List link>\n            {news.map(article => (\n              <List.Item\n                as={Link}\n                to={`/news/${article.id}`}\n                key={article.id}\n                // onClick={addCount(article.id)}\n              >\n                <Segment>\n                  <Grid columns='equal'>\n                    <Grid.Column>\n                      {article.title}\n                    </Grid.Column>\n                  </Grid>\n                </Segment>\n              </List.Item>\n            ))}\n          </List>\n        </Grid.Column>\n        <Grid.Column style={{ zIndex: 0 }}>\n          <Sticky context={contextRef} pushing>\n            <Route path=\"/news/:articleID\" component={Article} />\n          </Sticky>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n};","const USERS = 'https://jsonplaceholder.typicode.com/users/';\n\nexport async function getUsers() {\n  const response = await fetch(USERS);\n  const result = await response.json();\n\n  return result;\n}","const initialState = []\n\nconst SET_USERS = 'setUsers';\n\nexport const setUsersAction = (users) => ({\n  type: SET_USERS,\n  users,\n})\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USERS:\n      return [...action.users];\n\n    default:\n      return state;\n  }\n}\n\nexport default usersReducer;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Menu, Dropdown } from 'semantic-ui-react';\nimport * as api from '../../api/apiUsers'\nimport { setUsersAction } from '../../redux/users';\nimport { filterNewsAction } from '../../redux/news';\n\n\nexport const Users = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(state => (state.users).map(item => ({\n    key: item.id,\n    text: item.name,\n    value: item.id,\n  })));\n  users.unshift({ key: 0, text: 'All', value: 0 });\n\n  useEffect(() => {\n    api.getUsers()\n      .then(usersFromServer => (\n        dispatch(setUsersAction(usersFromServer))\n      ))\n  }, [dispatch])\n\n  return (\n    <Menu compact>\n      <Dropdown\n        placeholder=\"All\"\n        selection options={users}\n        defaultValue={(JSON.parse(localStorage.getItem('choosenUser')))}\n        onChange={(event, data) => {\n          dispatch(filterNewsAction(data.value));\n          localStorage.setItem('choosenUser', JSON.stringify(data.value));\n        }}\n      />\n    </Menu>\n  )\n}\n","import React from 'react';\nimport { Button, Container, Form, Input, TextArea, Segment, Dropdown } from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { AddArticle } from '../../redux/news';\n\nexport const AddUser = () => {\n  const users = useSelector(state => (state.users).map(item => ({\n    key: item.id,\n    text: item.name,\n    value: item.id,\n  })));\n  const [formVisibility, setFormVisibility] = useState(false)\n  const [newTitle, setNewTitle] = useState('');\n  const [newBody, setNewBody] = useState('');\n  const [choosenUser, setChoosenUser] = useState(1);\n  const dispatch = useDispatch();\n\n  const applyData = () => {\n    dispatch(AddArticle(newTitle, newBody, choosenUser, +Date.now()))\n    setFormVisibility(!formVisibility)\n    setNewTitle('')\n    setNewBody('')\n    setChoosenUser(1)\n  }\n\n  return (\n    <>\n      <Button\n        style={{ marginLeft: 40 }}\n        onClick={() => setFormVisibility(!formVisibility)}\n      >\n        Add article\n      </Button>\n      { formVisibility &&\n        <Container style={{ zIndex: 1, position: 'absolute', top: '20vh', left: '10vw', height: '500px', width: '800px', border: '1px solid black', backgroundColor: 'grey' }}>\n          <Segment style={{ backgroundColor: \"grey\" }}>\n            <Form\n              onSubmit={(event => {\n                event.preventDefault();\n                applyData();\n              })}\n            >\n              <Input\n                placeholder=\"Title\"\n                required\n                style={{ margin: '20px 0', width: '100%' }}\n                value={newTitle}\n                onChange={(event) => setNewTitle(event.target.value)}\n              />\n              <TextArea\n                placeholder=\"Body\"\n                required\n                value={newBody}\n                onChange={(event) => setNewBody(event.target.value)}\n              />\n              <Dropdown\n                name=\"users\"\n                selection options={users}\n                defaultValue={1}\n                onChange={(event, data) => setChoosenUser(data.value)}\n                style={{ margin: '0 10px' }}\n              />\n              <Button type='submit' style={{ margin: '20px 0' }}>Submit</Button>\n              <Button onClick={() => {\n                setFormVisibility(!formVisibility)\n                setNewTitle('')\n                setNewBody('')\n                setChoosenUser(1)\n              }}\n              style={{ margin: '0 10px' }}\n              >\n                Cancel\n              </Button>\n            </Form>\n          </Segment>\n        </Container>\n      }\n    </>\n  )\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Container, Segment } from 'semantic-ui-react';\nimport * as api from './api/apiNews';\nimport { NewsPage } from './components/NewsPage/newsPage';\nimport { setNewsAction, filterNewsAction } from './redux/news';\nimport { Users } from './components/Users/Users';\nimport { AddUser } from './components/Users/AddUser';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    api.getNews()\n      .then(newsFromServer => {\n        if (JSON.parse(localStorage.getItem('news'))) {\n           dispatch(setNewsAction(JSON.parse(localStorage.getItem('news'))));\n        } else {\n           dispatch(setNewsAction(newsFromServer));\n           localStorage.setItem('news', JSON.stringify(newsFromServer));\n        }\n\n        if (JSON.parse(localStorage.getItem('choosenUser'))) {\n          dispatch(filterNewsAction(JSON.parse(localStorage.getItem('choosenUser'))))\n        }\n      })\n  }, [dispatch])\n\n  return (\n    <Container>\n      <Segment>\n        <Users />\n        <AddUser/>\n      </Segment>\n      <Segment>\n        <NewsPage />\n      </Segment>\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport commentsReducer from './comments';\nimport newsReducer from './news';\nimport usersReducer from './users';\n\nconst reducer = combineReducers({\n  news: newsReducer,\n  comments: commentsReducer,\n  users: usersReducer,\n})\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './App';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter> ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}